[build]
command = """
curl -L -o flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.19.3-stable.tar.xz && 
tar xf flutter.tar.xz && 
export PATH="$PATH:`pwd`/flutter/bin" &&
flutter precache &&
flutter --version &&
flutter build web --release &&
cat > build/web/index.html << 'EOL'
<!DOCTYPE html>
<html>
  <head>
    <base href="/">
    <meta charset="UTF-8">
    <meta content="IE=Edge" http-equiv="X-UA-Compatible">
    <meta name="description" content="Bunyan Flutter Web App">
    
    <!-- iOS meta tags & icons -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Bunyan">
    <link rel="apple-touch-icon" href="icons/Icon-192.png">

    <!-- Favicon -->
    <link rel="icon" type="image/png" href="favicon.png"/>

    <link rel="manifest" href="manifest.json">

    <script>
      // The value below is injected by flutter build, do not touch.
      const serviceWorkerVersion = null;
    </script>
    <!-- This script adds the flutter initialization JS code -->
    <script src="flutter.js" defer></script>
    <title>Bunyan</title>
  </head>
  <body>
    <script>
      window.addEventListener('load', function(ev) {
        // Download main.dart.js
        _flutter = { loader: {} };
        _flutter.loader.loadEntrypoint({
          serviceWorker: {
            serviceWorkerVersion: serviceWorkerVersion,
          },
          onEntrypointLoaded: function(engineInitializer) {
            engineInitializer.initializeEngine().then(function(appRunner) {
              appRunner.runApp();
            });
          }
        });
      });
    </script>
  </body>
</html>
EOL
"""
publish = "build/web"

[build.environment]
CI = "false"
NODE_VERSION = "18"
